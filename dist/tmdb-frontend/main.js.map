{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/movies.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"[ng\\\\:cloak],\\n[ng-cloak],\\n[data-ng-cloak],\\n[x-ng-cloak],\\n.ng-cloak,\\n.x-ng-cloak {\\n  display: none !important;\\n}\\n\\n.blog{\\n  margin: 4em 0;\\n  position: relative; \\n }\\n\\n.blog h1{\\n  color:#F97300;\\n  margin: 2em; \\n }\\n\\n.blog .card{\\n  box-shadow: 0 0 20px #ccc;\\n }\\n\\n.blog .card img{\\n  width: 100%;\\n  height: 100%;\\n }\\n\\n.blog .card-title{\\n  color:#F97300;\\n   \\n }\\n\\n.blog .card-body{\\n  padding: 1em;\\n }\\n\\n.card{\\n  margin-bottom: 8%;\\n }\\n\\np .card-text{\\n  overflow: hidden;\\n }\\n\\n.imgHeight{\\n   height: 540px !important;\\n }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztFQU1FLHlCQUF5QjtDQUMxQjs7QUFFRDtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkI7O0FBQ0Q7RUFDQyxjQUFjO0VBQ2QsWUFBWTtFQUNaOztBQUNEO0VBQ0MsMEJBQTBCO0VBQzFCOztBQUNEO0VBQ0MsWUFBWTtFQUNaLGFBQWE7RUFDYjs7QUFDRDtFQUNDLGNBQWM7O0VBRWQ7O0FBQ0Q7RUFDQyxhQUFhO0VBQ2I7O0FBQ0Q7RUFDQyxrQkFBa0I7RUFDbEI7O0FBRUQ7RUFDQyxpQkFBaUI7RUFDakI7O0FBRUQ7R0FDRSx5QkFBeUI7RUFDMUIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIltuZ1xcOmNsb2FrXSxcbltuZy1jbG9ha10sXG5bZGF0YS1uZy1jbG9ha10sXG5beC1uZy1jbG9ha10sXG4ubmctY2xvYWssXG4ueC1uZy1jbG9hayB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmJsb2d7XG4gIG1hcmdpbjogNGVtIDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgXG4gfVxuIC5ibG9nIGgxe1xuICBjb2xvcjojRjk3MzAwO1xuICBtYXJnaW46IDJlbTsgXG4gfVxuIC5ibG9nIC5jYXJke1xuICBib3gtc2hhZG93OiAwIDAgMjBweCAjY2NjO1xuIH1cbiAuYmxvZyAuY2FyZCBpbWd7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gfVxuIC5ibG9nIC5jYXJkLXRpdGxle1xuICBjb2xvcjojRjk3MzAwO1xuICAgXG4gfVxuIC5ibG9nIC5jYXJkLWJvZHl7XG4gIHBhZGRpbmc6IDFlbTtcbiB9XG4gLmNhcmR7XG4gIG1hcmdpbi1ib3R0b206IDglO1xuIH1cblxuIHAgLmNhcmQtdGV4dHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiB9XG5cbiAuaW1nSGVpZ2h0e1xuICAgaGVpZ2h0OiA1NDBweCAhaW1wb3J0YW50O1xuIH0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"d-flex justify-content-center fixed-top navbar-brand \\\" style=\\\"margin-top: 2.5px\\\">\\n      <input type=\\\"text\\\" placeholder=\\\"What's the word?\\\" [(ngModel)]=\\\"movieName\\\">\\n      <button (click)=\\\"searchMovie(movieName)\\\" class=\\\"btn btn-primary\\\"> Find the Movie!</button>\\n  </div>\\n\\n  <!-- <input [(ngModel)]=\\\"moviePage\\\" type=\\\"number\\\">\\n  {{ moviesResults.page }}\\n  <button (click)=more(moviePage) class=\\\"btn btn-success\\\">More! </button>\\n  {{ moviesResults.total_pages }} -->\\n<div class=\\\"blog\\\">\\n  <div class=\\\"container\\\">\\n    <div *ngIf=\\\"moviesResultsState\\\" class=\\\"row\\\">\\n      <div *ngFor=\\\"let movie of moviesResults.results\\\" \\n      (click)=\\\"singleMovie(movie.id)\\\"\\n      class=\\\"col-md-6 col-lg-4 col-sm-12\\\">\\n        <div class=\\\"card\\\">\\n         <div class=\\\"card-img\\\">\\n          <img src=\\\"http://image.tmdb.org/t/p/w300/{{ movie.poster_path }}\\\" class=\\\"img-fluid\\\">\\n         </div>\\n         <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-title\\\">{{ movie.title }}</h4>\\n          <p class=\\\"card-text d-inline-block text-truncate\\\" style=\\\"max-width: 320px;\\\">\\n            {{ movie.overview }}\\n          </p>\\n         </div>\\n         <div class=\\\"card-footer\\\">\\n          <p class=\\\"card-text\\\">{{ movie.release_date }}</p>\\n         </div>\\n        </div>\\n       </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n    <!-- <div *ngIf=\\\"moviesResultsState\\\"\\n        class=\\\"row marginTinz\\\">\\n        <div \\n          *ngFor=\\\"let movie of moviesResults.results\\\" \\n          (click)=\\\"singleMovie(movie.id)\\\"\\n          class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <img class=\\\"imgClass\\\" src='http://image.tmdb.org/t/p/w300/{{ movie.poster_path }}'/>\\n          <div class=\\\"fixed_Height\\\">          \\n            <p><strong>Title:</strong> {{ movie.title }}</p>\\n            <p><strong>Total Votes:</strong> {{ movie.vote_count }}</p>\\n            <p><strong>Vote average:</strong> {{ movie.vote_average }}</p>\\n            <p><strong>Movie Popularity:</strong> {{ movie.popularity }}</p>\\n            <p><strong>Overview:</strong> {{ movie.overview }}</p>\\n            <p><strong>Release date:</strong> {{ movie.release_date }}</p>\\n          </div>\\n\\n        </div>\\n      </div> -->\\n  \\n  <div class=\\\"container marginTinz\\\" #scrollContainer>\\n    <!-- <div>\\n        <button class=\\\"btn btn-primary float-right\\\" (click)=\\\"goBack($event)\\\">Back</button>\\n    </div> -->\\n      <div *ngIf=\\\"movieState\\\" class=\\\"row justify-content\\\">\\n        <div class=\\\"col\\\" >\\n            <img src='http://image.tmdb.org/t/p/w780/{{ oneMovie.backdrop_path }}'/>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <p><strong>Title: </strong>{{ oneMovie.original_title }}</p>\\n          <strong>Genre</strong><span *ngFor=\\\"let genre of oneMovie.genres\\\">\\n                  {{ genre.name }} |\\n          </span>\\n          <p><strong>Overview: </strong>{{ oneMovie.overview }}</p>\\n          <span><strong>Runtime: </strong>{{ oneMovie.runtime }} Minutes</span> | <span><strong>Release date: </strong>{{ oneMovie.release_date | json }}</span>\\n          <p><strong>Budget: </strong>{{ oneMovie.budget | currency: 'USD' }}</p>\\n          <p><strong>Revenue: </strong>{{ oneMovie.revenue | currency: 'USD' }}</p>\\n          <p><strong>Tagline: </strong>{{ oneMovie.tagline }}</p>\\n          <p><strong>Movie Popularity: </strong>{{ oneMovie.popularity }}</p>\\n          <p><strong>Release date: </strong>{{ oneMovie.release_date }}</p>\\n          <strong>Production companies</strong><span *ngFor=\\\"let company of oneMovie.production_companies\\\">\\n              {{ company.name }} |\\n          </span>\\n        </div>\\n      </div>\\n  </div>\\n\\n  \\n\\n</div>\\n  <div \\n  *ngIf=\\\"movieState\\\" class=\\\"row\\\">\\n        <div *ngFor=\\\"let movie of similarMovieResults.results\\\" (click)=\\\"singleMovie(movie.id)\\\"\\n        class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <img src='http://image.tmdb.org/t/p/w300/{{ movie.poster_path }}'/>\\n          <div>\\n            <p *ngIf=\\\"movie.title\\\"><strong>Title:</strong> {{ movie.title }}</p>\\n            <p *ngIf=\\\"movie.vote_count\\\"><strong>Total Votes:</strong> {{ movie.vote_count }}</p>\\n            <p *ngIf=\\\"movie.vote_average\\\"><strong>Vote average:</strong> {{ movie.vote_average }}</p>\\n            <p *ngIf=\\\"movie.popularity\\\"><strong>Movie Popularity:</strong> {{ movie.popularity }}</p>\\n            <p *ngIf=\\\"movie.overview\\\"><strong>Overview:</strong> {{ movie.overview }}</p>\\n            <p *ngIf=\\\"movie.release_date\\\"><strong>Release date:</strong> {{ movie.release_date }}</p>\\n          </div>\\n      </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MoviesService } from './movies.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  title = 'tmdb-frontend';\n  constructor(private moviesService: MoviesService, private location: Location) {}\n  movieName: string;\n  moviePage: number;\n  total_pages: number;\n  newPage: number;\n  similarMovieResults = <any>[];\n  // goBack(e) {\n  //   event.preventDefault();\n  //   this.location.back();\n  //   console.log(\"Went back One page\");\n  // }\n  // similar = this.similarMovieResults.results;\n  moviesResults = <any>{};\n  moviesResultsState = false;\n  movieState = false;\n  oneMovie = <any>{};\n\n  getPopularMovies() {\n    this.moviesResultsState = true\n    this.moviesResults = {};\n    this.moviesService.getPopular(1)\n    .subscribe((movies) => {\n      // this.newPage = movies.page\n      this.moviesResults = movies;\n      console.log(movies);\n    });\n  }\n\n  searchMovie(x:string) {\n    console.log(x, \"THIS IS THE MOVIE\")\n    this.moviesResults = {};\n    this.moviesResultsState = true\n    this.movieState = false;\n    this.moviesService.findMovie(x)\n    .subscribe((movies) =>{\n      this.moviesResults = movies;\n      console.log(movies);\n    })\n    // this.movieName = '';\n  }\n\n  // more(moviePage: number){\n  //   console.log(moviePage)\n  //   // this.moviesService.getPopular()\n  //   this.moviesService.getPopular(moviePage)\n  //   .subscribe((movies) =>{\n  //     this.moviesResults = movies;\n  //     console.log(movies, \"Moveis on page \" + moviePage);\n  //   });\n  // }\n  // onActivate(e, scrollContainer) {\n  //   scrollContainer .scrollable._elementRef.nativeElement.scrollTop = 0\n  // }\n  singleMovie(movieID) {\n    \n    this.moviesResults = {};\n    this.moviesResultsState = false\n    this.movieState = true;\n    this.moviesService.getOneMovie(movieID)\n    .subscribe((movie) => {\n      this.moviesResults = {};\n      this.oneMovie = movie;\n      console.log(movie);\n    });\n    this.moviesService.getSimilar(movieID)\n    .subscribe((movies) => {\n      this.similarMovieResults = movies\n      console.log(movies, \"Similar movies\");\n    });\n  }\n\n  ngOnInit() {\n    this.getPopularMovies();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { MoviesService } from './movies.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [MoviesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n  // url = 'http://localhost:5555';\n  url = 'https://tmdb-api-ang.herokuapp.com';\n\n  constructor(private http: HttpClient) { }\n\n  // Get popular movies on TMDB\n  // getPopular(): Observable<any>{\n  //   return this.http.get<any>(`${this.url}/movies/popular`);\n  // }\n\n  getPopular(req: number): Observable<any>{\n    console.log(req, \"from service\");\n    let backendString = `${this.url}/movies/popular`;\n    if(!req){\n      return this.http.get<any>(backendString);\n    }else{\n      return this.http.get<any>(backendString + '?page=' + req)\n    }\n  }\n\n  // Search for movies based on search term\n  findMovie(movieName: string): Observable<any> {\n    return this.http.get<any>(`${this.url}/movies/search/`+ movieName);\n  }\n\n  // Get full details of one movie\n  getOneMovie(movieId): Observable<any>{\n    return this.http.get<any>(`${this.url}/movies/movie/` + movieId)\n  }\n\n  // Get similar movies based on the id of another movie.\n  getSimilar(movieId): Observable<any> {\n    return this.http.get<any>(`${this.url}/movies/movie/similar/` + movieId)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nenableProdMode();\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}